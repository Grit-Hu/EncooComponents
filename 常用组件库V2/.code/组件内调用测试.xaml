<Activity mc:Ignorable="sap sap2010 sads" x:Class="EncooWorkflow.Main" sap2010:ExpressionActivityEditor.ExpressionActivityEditor="C#" sap:VirtualizedContainerService.HintSize="411,572" sap2010:WorkflowViewState.IdRef="EncooWorkflow.defaultWorkflowSequence" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:bfa="clr-namespace:BotTime.Flow.Activities;assembly=BotTime.Flow.Activities" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="11">
      <x:String>System</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Text.Unicode</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Threading.Tasks.Sources</x:String>
      <x:String>BotTime.Flow.Activities</x:String>
      <x:String>Microsoft.CSharp.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Globalization.Extensions</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Net.WebSockets.Client.Managed</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>ParallelExtensionsExtras</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Text.Encodings.Web</AssemblyReference>
      <AssemblyReference>System.Diagnostics.DiagnosticSource</AssemblyReference>
      <AssemblyReference>System.Configuration.Install</AssemblyReference>
      <AssemblyReference>System.Diagnostics.StackTrace</AssemblyReference>
      <AssemblyReference>System.Threading.Tasks.Extensions</AssemblyReference>
      <AssemblyReference>BotTime.Flow.Activities</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="序列_Root" sap:VirtualizedContainerService.HintSize="371,492" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="数值文本">
        <Variable.Default>
          <Literal x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="Literal`1_24">1,234W</Literal>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:Double" Name="数值Double" />
      <Variable x:TypeArguments="x:String" Name="数值String" />
      <Variable x:TypeArguments="x:String" Name="测试" />
      <Variable x:TypeArguments="x:String" Name="text" />
      <Variable x:TypeArguments="x:Object" Name="exception" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="模块与对应数据表名称字典" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Boolean)" Name="处理记录字典" />
      <Variable x:TypeArguments="sd:DataTable" Name="处理记录数据表" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <bfa:InvokeWorkflow ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="调用子流程: 获取Excel配置字典" sap:VirtualizedContainerService.HintSize="349,96" sap2010:WorkflowViewState.IdRef="InvokeWorkflow_3" IsIgnore="False">
      <bfa:InvokeWorkflow.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="配置表路径">
          <Literal x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="Literal`1_25">C:\Users\huhar\Desktop\配置表_测试.xlsx</Literal>
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="工作表名称">
          <Literal x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="Literal`1_26">模块与对应数据表名称</Literal>
        </InArgument>
        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="配置表字典">
          <mca:CSharpReference x:TypeArguments="scg:Dictionary(x:String, x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_3">模块与对应数据表名称字典</mca:CSharpReference>
        </OutArgument>
      </bfa:InvokeWorkflow.Arguments>
      <bfa:InvokeWorkflow.WorkflowPath>
        <InArgument x:TypeArguments="x:String">
          <Literal x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="Literal`1_28">获取Excel配置字典.xaml</Literal>
        </InArgument>
      </bfa:InvokeWorkflow.WorkflowPath>
    </bfa:InvokeWorkflow>
    <bfa:InvokeWorkflow ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="调用子流程: 初始化本地处理记录工作簿" sap:VirtualizedContainerService.HintSize="349,96" sap2010:WorkflowViewState.IdRef="InvokeWorkflow_2" IsIgnore="False">
      <bfa:InvokeWorkflow.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="处理记录表路径">
          <Literal x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="Literal`1_27">C:\Users\huhar\Desktop\test.xlsx</Literal>
        </InArgument>
        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Boolean)" x:Key="处理记录字典">
          <mca:CSharpReference x:TypeArguments="scg:Dictionary(x:String, x:Boolean)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_4">处理记录字典</mca:CSharpReference>
        </OutArgument>
        <OutArgument x:TypeArguments="sd:DataTable" x:Key="处理记录数据表">
          <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_5">处理记录数据表</mca:CSharpReference>
        </OutArgument>
        <InArgument x:TypeArguments="scg:List(x:String)" x:Key="模块名称List">
          <mca:CSharpValue x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_4">模块与对应数据表名称字典.Keys.ToList()</mca:CSharpValue>
        </InArgument>
      </bfa:InvokeWorkflow.Arguments>
      <bfa:InvokeWorkflow.WorkflowPath>
        <InArgument x:TypeArguments="x:String">
          <Literal x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="Literal`1_29">数据表\初始化本地处理记录工作簿.xaml</Literal>
        </InArgument>
      </bfa:InvokeWorkflow.WorkflowPath>
    </bfa:InvokeWorkflow>
    <bfa:InvokeWorkflow ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="调用子流程: 打印数据表" sap:VirtualizedContainerService.HintSize="349,96" sap2010:WorkflowViewState.IdRef="InvokeWorkflow_4" IsIgnore="False">
      <bfa:InvokeWorkflow.Arguments>
        <InArgument x:TypeArguments="sd:DataTable" x:Key="传入的数据表">
          <mca:CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_5">处理记录数据表</mca:CSharpValue>
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="数据表名称">
          <Literal x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="Literal`1_5">数据表</Literal>
        </InArgument>
      </bfa:InvokeWorkflow.Arguments>
      <bfa:InvokeWorkflow.WorkflowPath>
        <InArgument x:TypeArguments="x:String">
          <Literal x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="Literal`1_30">日志增强\打印数据表.xaml</Literal>
        </InArgument>
      </bfa:InvokeWorkflow.WorkflowPath>
    </bfa:InvokeWorkflow>
  </Sequence>
</Activity>