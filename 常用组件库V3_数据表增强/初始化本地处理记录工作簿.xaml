<Activity mc:Ignorable="sap sap2010 sads" x:Class="EncooWorkflow.Main" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:baasf="clr-namespace:BotTime.ActivityLibrary.Activities.System.File;assembly=BotTime.ActivityLibrary" xmlns:baast="clr-namespace:BotTime.ActivityLibrary.Activities.System.Tool;assembly=BotTime.ActivityLibrary" xmlns:bda="clr-namespace:BotTime.DataTableActivity.Activities;assembly=BotTime.DataTableActivity" xmlns:bfa="clr-namespace:BotTime.Flow.Activities;assembly=BotTime.Flow.Activities" xmlns:boa="clr-namespace:BotTime.Office.Activity;assembly=BotTime.Office.Activity" xmlns:ecaad="clr-namespace:Encoo.CodeTool.Activity.Activities.Dictionary;assembly=Encoo.CodeTool.Activity" xmlns:ecam="clr-namespace:Encoo.CodeTool.Activity.Models;assembly=Encoo.CodeTool.Activity" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger">
  <x:Members>
    <x:Property Name="处理记录表路径" Type="InArgument(x:String)" />
    <x:Property Name="处理记录字典" Type="OutArgument(scg:Dictionary(x:String, x:Boolean))" />
    <x:Property Name="处理记录数据表" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="模块名称List" Type="InArgument(scg:List(x:String))" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>634,3686</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>EncooWorkflow.defaultWorkflowSequence</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="14">
      <x:String>System</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>BotTime.ActivityLibrary.Activities.System.File</x:String>
      <x:String>BotTime.ActivityLibrary.Activities.System.Tool</x:String>
      <x:String>BotTime.DataTableActivity.Activities</x:String>
      <x:String>BotTime.Flow.Activities</x:String>
      <x:String>BotTime.Office.Activity</x:String>
      <x:String>Encoo.CodeTool.Activity.Activities.Dictionary</x:String>
      <x:String>Encoo.CodeTool.Activity.Models</x:String>
      <x:String>Microsoft.CSharp.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>BotTime.ActivityLibrary</AssemblyReference>
      <AssemblyReference>BotTime.DataTableActivity</AssemblyReference>
      <AssemblyReference>BotTime.Flow.Activities</AssemblyReference>
      <AssemblyReference>BotTime.Office.Activity</AssemblyReference>
      <AssemblyReference>Encoo.CodeTool.Activity</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Globalization.Extensions</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Net.WebSockets.Client.Managed</AssemblyReference>
      <AssemblyReference>ParallelExtensionsExtras</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="序列_Root" sap:VirtualizedContainerService.HintSize="594,3606" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <baast:LogActivity ActivityName="写入日志" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="写入日志" sap:VirtualizedContainerService.HintSize="572,58" sap2010:WorkflowViewState.IdRef="LogActivity_2" Level="Info">
      <baast:LogActivity.LogContent>
        <InArgument x:TypeArguments="x:String">
          <Literal x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="Literal`1_8">====初始化本地处理记录工作簿====</Literal>
        </InArgument>
      </baast:LogActivity.LogContent>
    </baast:LogActivity>
    <baast:LogActivity ActivityName="写入日志" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="写入日志" sap:VirtualizedContainerService.HintSize="572,58" sap2010:WorkflowViewState.IdRef="LogActivity_4" Level="Info">
      <baast:LogActivity.LogContent>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_46">System.Convert.ToString("处理记录表路径="+处理记录表路径)</mca:CSharpValue>
        </InArgument>
      </baast:LogActivity.LogContent>
    </baast:LogActivity>
    <Sequence DisplayName="创建或读取处理记录字典" sap:VirtualizedContainerService.HintSize="572,3286" sap2010:WorkflowViewState.IdRef="Sequence_3">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:Boolean" Name="处理记录表路径是否存在" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <baasf:PathExistsActivity ActivityName="文件/文件夹是否存在" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="文件/文件夹是否存在" sap:VirtualizedContainerService.HintSize="550,58" sap2010:WorkflowViewState.IdRef="PathExistsActivity_1" InputType="File">
        <baasf:PathExistsActivity.Exists>
          <OutArgument x:TypeArguments="x:Boolean">
            <mca:CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_1">处理记录表路径是否存在</mca:CSharpReference>
          </OutArgument>
        </baasf:PathExistsActivity.Exists>
        <baasf:PathExistsActivity.InputPath>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1">System.Convert.ToString(处理记录表路径)</mca:CSharpValue>
          </InArgument>
        </baasf:PathExistsActivity.InputPath>
      </baasf:PathExistsActivity>
      <baast:LogActivity ActivityName="写入日志" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="写入日志" sap:VirtualizedContainerService.HintSize="550,58" sap2010:WorkflowViewState.IdRef="LogActivity_1" Level="Info">
        <baast:LogActivity.LogContent>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_2">System.Convert.ToString("处理记录表是否存在"+处理记录表路径是否存在)</mca:CSharpValue>
          </InArgument>
        </baast:LogActivity.LogContent>
      </baast:LogActivity>
      <bfa:If ActivityName="条件（If）" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="条件（If）" sap:VirtualizedContainerService.HintSize="550,984" sap2010:WorkflowViewState.IdRef="If_1" IsIgnore="False">
        <bfa:If.Condition>
          <InArgument x:TypeArguments="x:Boolean">
            <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_3">处理记录表路径是否存在 == false</mca:CSharpValue>
          </InArgument>
        </bfa:If.Condition>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <bfa:If.Then>
          <boa:OfficeExcelOpenOrCreateActivity OfficeVersion="{x:Null}" Password="{x:Null}" SaveAs="{x:Null}" ActivityName="打开/新建" AutoSave="True" ContinueOnError="No" CreateNewFile="True" DelayAfter="0" DelayBefore="0" DisplayName="打开/新建" EnableMacro="False" sap:VirtualizedContainerService.HintSize="450,550" sap2010:WorkflowViewState.IdRef="OfficeExcelOpenOrCreateActivity_2" MultiEngineType="Office" ReadOnly="False" Visible="False" needRestoreKey="False">
            <boa:OfficeExcelOpenOrCreateActivity.Body>
              <ActivityAction x:TypeArguments="x:Object">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:Object" Name="XlWorkbook" />
                </ActivityAction.Argument>
                <Sequence DisplayName="序列" sap:VirtualizedContainerService.HintSize="356,442" sap2010:WorkflowViewState.IdRef="Sequence_5">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <boa:OfficeExcelSetRowColumnActivity ActivityName="写入行/列数据" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="写入行/列数据" sap:VirtualizedContainerService.HintSize="334,139" sap2010:WorkflowViewState.IdRef="OfficeExcelSetRowColumnActivity_1" WriteWay="Row">
                    <boa:OfficeExcelSetRowColumnActivity.Data>
                      <InArgument x:TypeArguments="scg:IEnumerable(x:Object)">
                        <mca:CSharpValue x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_13">new List&lt;String&gt;{"模块名称","是否处理完成"}</mca:CSharpValue>
                      </InArgument>
                    </boa:OfficeExcelSetRowColumnActivity.Data>
                    <boa:OfficeExcelSetRowColumnActivity.SheetName>
                      <InArgument x:TypeArguments="x:String">
                        <Literal x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="Literal`1_4">Sheet1</Literal>
                      </InArgument>
                    </boa:OfficeExcelSetRowColumnActivity.SheetName>
                    <boa:OfficeExcelSetRowColumnActivity.StartCell>
                      <InArgument x:TypeArguments="x:String">
                        <Literal x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="Literal`1_5">A1</Literal>
                      </InArgument>
                    </boa:OfficeExcelSetRowColumnActivity.StartCell>
                  </boa:OfficeExcelSetRowColumnActivity>
                  <boa:OfficeExcelSetRowColumnActivity ActivityName="写入行/列数据" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="写入行/列数据" sap:VirtualizedContainerService.HintSize="334,139" sap2010:WorkflowViewState.IdRef="OfficeExcelSetRowColumnActivity_2" WriteWay="Column">
                    <boa:OfficeExcelSetRowColumnActivity.Data>
                      <InArgument x:TypeArguments="scg:IEnumerable(x:Object)">
                        <mca:CSharpValue x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_28">模块名称List</mca:CSharpValue>
                      </InArgument>
                    </boa:OfficeExcelSetRowColumnActivity.Data>
                    <boa:OfficeExcelSetRowColumnActivity.SheetName>
                      <InArgument x:TypeArguments="x:String">
                        <Literal x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="Literal`1_6">Sheet1</Literal>
                      </InArgument>
                    </boa:OfficeExcelSetRowColumnActivity.SheetName>
                    <boa:OfficeExcelSetRowColumnActivity.StartCell>
                      <InArgument x:TypeArguments="x:String">
                        <Literal x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="Literal`1_7">A2</Literal>
                      </InArgument>
                    </boa:OfficeExcelSetRowColumnActivity.StartCell>
                  </boa:OfficeExcelSetRowColumnActivity>
                </Sequence>
              </ActivityAction>
            </boa:OfficeExcelOpenOrCreateActivity.Body>
            <boa:OfficeExcelOpenOrCreateActivity.ExcelFile>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_7">System.Convert.ToString(处理记录表路径)</mca:CSharpValue>
              </InArgument>
            </boa:OfficeExcelOpenOrCreateActivity.ExcelFile>
          </boa:OfficeExcelOpenOrCreateActivity>
        </bfa:If.Then>
        <bfa:If.Else>
          <baast:LogActivity ActivityName="写入日志" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="写入日志" sap:VirtualizedContainerService.HintSize="349,58" sap2010:WorkflowViewState.IdRef="LogActivity_5" Level="Info">
            <baast:LogActivity.LogContent>
              <InArgument x:TypeArguments="x:String">
                <Literal x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="Literal`1_11">路径存在，直接打开。</Literal>
              </InArgument>
            </baast:LogActivity.LogContent>
          </baast:LogActivity>
        </bfa:If.Else>
      </bfa:If>
      <bfa:Delay DelayTimeSpan="00:00:00" DisplayName="延迟" sap:VirtualizedContainerService.HintSize="550,53" sap2010:WorkflowViewState.IdRef="Delay_1">
        <bfa:Delay.WaitTimeSpan>
          <InArgument x:TypeArguments="x:TimeSpan">
            <Literal x:TypeArguments="x:TimeSpan" sap2010:WorkflowViewState.IdRef="Literal`1_1" Value="00:00:03" />
          </InArgument>
        </bfa:Delay.WaitTimeSpan>
      </bfa:Delay>
      <boa:OfficeExcelOpenOrCreateActivity OfficeVersion="{x:Null}" Password="{x:Null}" SaveAs="{x:Null}" ActivityName="打开/新建" AutoSave="True" ContinueOnError="No" CreateNewFile="False" DelayAfter="0" DelayBefore="0" DisplayName="打开/新建" EnableMacro="False" sap:VirtualizedContainerService.HintSize="550,816" sap2010:WorkflowViewState.IdRef="OfficeExcelOpenOrCreateActivity_1" MultiEngineType="Office" ReadOnly="False" Visible="False" needRestoreKey="False">
        <boa:OfficeExcelOpenOrCreateActivity.Body>
          <ActivityAction x:TypeArguments="x:Object">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:Object" Name="XlWorkbook" />
            </ActivityAction.Argument>
            <Sequence DisplayName="序列" sap:VirtualizedContainerService.HintSize="356,708" sap2010:WorkflowViewState.IdRef="Sequence_4">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:Int32" Name="lastRowIndex" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <boa:OfficeExcelGetLastRowIndexActivity ColumnIndex="{x:Null}" ColumnNo="{x:Null}" LettersColumnIndex="{x:Null}" ActivityName="获取末行号" ColumnType="NumberColumn" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="获取末行号" sap:VirtualizedContainerService.HintSize="334,139" sap2010:WorkflowViewState.IdRef="OfficeExcelGetLastRowIndexActivity_1">
                <boa:OfficeExcelGetLastRowIndexActivity.LastRowIndex>
                  <OutArgument x:TypeArguments="x:Int32">
                    <mca:CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_4">lastRowIndex</mca:CSharpReference>
                  </OutArgument>
                </boa:OfficeExcelGetLastRowIndexActivity.LastRowIndex>
                <boa:OfficeExcelGetLastRowIndexActivity.SheetName>
                  <InArgument x:TypeArguments="x:String">
                    <Literal x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="Literal`1_2">Sheet1</Literal>
                  </InArgument>
                </boa:OfficeExcelGetLastRowIndexActivity.SheetName>
              </boa:OfficeExcelGetLastRowIndexActivity>
              <boa:OfficeExcelReadRangeActivity SheetName="{x:Null}" ActivityName="读取区域" AddHeaders="True" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="读取区域" sap:VirtualizedContainerService.HintSize="334,129" sap2010:WorkflowViewState.IdRef="OfficeExcelReadRangeActivity_1" PreserveFormat="False" RepeatedColumn="False" UseFilter="False">
                <boa:OfficeExcelReadRangeActivity.Data>
                  <OutArgument x:TypeArguments="sd:DataTable">
                    <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_5">处理记录数据表</mca:CSharpReference>
                  </OutArgument>
                </boa:OfficeExcelReadRangeActivity.Data>
                <boa:OfficeExcelReadRangeActivity.Range>
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_12">System.Convert.ToString("A1:B"+lastRowIndex)</mca:CSharpValue>
                  </InArgument>
                </boa:OfficeExcelReadRangeActivity.Range>
                <boa:OfficeExcelReadRangeActivity.SheetNameOrIndex>
                  <InArgument x:TypeArguments="x:String">
                    <Literal x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="Literal`1_3">Sheet1</Literal>
                  </InArgument>
                </boa:OfficeExcelReadRangeActivity.SheetNameOrIndex>
              </boa:OfficeExcelReadRangeActivity>
              <Sequence sap2010:Annotation.AnnotationText="记录表已经存在的话， 检查下是否所有模块都在模块名称List存在，没有的话，就加上。" DisplayName="序列-补充可能新增的模块" sap:VirtualizedContainerService.HintSize="334,236" sap2010:WorkflowViewState.IdRef="Sequence_7">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:Boolean" Name="模块名称是否已经在List中" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <bfa:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" ActivityName="循环操作（For Each）" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="循环操作（For Each）" sap:VirtualizedContainerService.HintSize="200,53" sap2010:WorkflowViewState.IdRef="ForEach`1_2" IsIgnore="False">
                  <bfa:ForEach.Values>
                    <InArgument x:TypeArguments="scg:List(x:String)">
                      <mca:CSharpValue x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_29">模块名称List</mca:CSharpValue>
                    </InArgument>
                  </bfa:ForEach.Values>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ActivityAction x:TypeArguments="x:String">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="序列" sap:VirtualizedContainerService.HintSize="556,1061" sap2010:WorkflowViewState.IdRef="Sequence_8">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <bfa:MultipleAssign ActivityName="赋值（多个）" sap2010:Annotation.AnnotationText="初始化" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="赋值（多个）" sap:VirtualizedContainerService.HintSize="534,116" sap2010:WorkflowViewState.IdRef="MultipleAssign_1" IsIgnore="False" Text="[{&quot;To&quot;:&quot;模块名称是否已经在List中&quot;,&quot;ToTypeName&quot;:&quot;System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&quot;,&quot;Val&quot;:&quot;false&quot;,&quot;ValTypeName&quot;:&quot;System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&quot;}]">
                        <bfa:MultipleAssign.AssignModels>
                          <bfa:AssignModel Index="1" IsNotFirst="False">
                            <bfa:AssignModel.To>
                              <OutArgument x:TypeArguments="x:Boolean">
                                <mca:CSharpReference x:TypeArguments="x:Boolean">模块名称是否已经在List中</mca:CSharpReference>
                              </OutArgument>
                            </bfa:AssignModel.To>
                            <bfa:AssignModel.Value>
                              <InArgument x:TypeArguments="x:Boolean">
                                <mca:CSharpValue x:TypeArguments="x:Boolean">false</mca:CSharpValue>
                              </InArgument>
                            </bfa:AssignModel.Value>
                          </bfa:AssignModel>
                        </bfa:MultipleAssign.AssignModels>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </bfa:MultipleAssign>
                      <bda:ForEach CurrentIndex="{x:Null}" ActivityName="遍历行" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="遍历行" sap:VirtualizedContainerService.HintSize="534,53" sap2010:WorkflowViewState.IdRef="ForEach_2">
                        <bda:ForEach.DataTable>
                          <InArgument x:TypeArguments="sd:DataTable">
                            <mca:CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_30">处理记录数据表</mca:CSharpValue>
                          </InArgument>
                        </bda:ForEach.DataTable>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ActivityAction x:TypeArguments="sd:DataRow">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                          </ActivityAction.Argument>
                          <bfa:If ActivityName="条件（If）" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="条件（If）" sap:VirtualizedContainerService.HintSize="200,53" sap2010:WorkflowViewState.IdRef="If_4" IsIgnore="False">
                            <bfa:If.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_33">row["模块名称"].ToString()==item.ToString()</mca:CSharpValue>
                              </InArgument>
                            </bfa:If.Condition>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <bfa:If.Then>
                              <Sequence DisplayName="序列" sap:VirtualizedContainerService.HintSize="382,302" sap2010:WorkflowViewState.IdRef="Sequence_9">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <bfa:MultipleAssign ActivityName="赋值（多个）" sap2010:Annotation.AnnotationText="初始化" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="赋值（多个）" sap:VirtualizedContainerService.HintSize="360,116" sap2010:WorkflowViewState.IdRef="MultipleAssign_2" IsIgnore="False" Text="[{&quot;To&quot;:&quot;模块名称是否已经在List中&quot;,&quot;ToTypeName&quot;:&quot;System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&quot;,&quot;Val&quot;:&quot;true&quot;,&quot;ValTypeName&quot;:&quot;System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&quot;}]">
                                  <bfa:MultipleAssign.AssignModels>
                                    <bfa:AssignModel Index="1" IsNotFirst="False">
                                      <bfa:AssignModel.To>
                                        <OutArgument x:TypeArguments="x:Boolean">
                                          <mca:CSharpReference x:TypeArguments="x:Boolean">模块名称是否已经在List中</mca:CSharpReference>
                                        </OutArgument>
                                      </bfa:AssignModel.To>
                                      <bfa:AssignModel.Value>
                                        <InArgument x:TypeArguments="x:Boolean">
                                          <mca:CSharpValue x:TypeArguments="x:Boolean">true</mca:CSharpValue>
                                        </InArgument>
                                      </bfa:AssignModel.Value>
                                    </bfa:AssignModel>
                                  </bfa:MultipleAssign.AssignModels>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </bfa:MultipleAssign>
                                <bfa:Break BreakAction="{x:Null}" ActivityName="终止循环" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="终止循环" sap:VirtualizedContainerService.HintSize="360,22" sap2010:WorkflowViewState.IdRef="Break_1" IsIgnore="False" />
                              </Sequence>
                            </bfa:If.Then>
                          </bfa:If>
                        </ActivityAction>
                      </bda:ForEach>
                      <bfa:If ActivityName="条件（If）" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="条件（If）" sap:VirtualizedContainerService.HintSize="534,688" sap2010:WorkflowViewState.IdRef="If_5" IsIgnore="False">
                        <bfa:If.Condition>
                          <InArgument x:TypeArguments="x:Boolean">
                            <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_31">模块名称是否已经在List中==false</mca:CSharpValue>
                          </InArgument>
                        </bfa:If.Condition>
                        <bfa:If.Then>
                          <Sequence DisplayName="序列" sap:VirtualizedContainerService.HintSize="371,396" sap2010:WorkflowViewState.IdRef="Sequence_10">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <baast:LogActivity ActivityName="写入日志" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="写入日志" sap:VirtualizedContainerService.HintSize="349,58" sap2010:WorkflowViewState.IdRef="LogActivity_3" Level="Info">
                              <baast:LogActivity.LogContent>
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_39">System.Convert.ToString(item+" 模块在现有数据表中不存在，添加。")</mca:CSharpValue>
                                </InArgument>
                              </baast:LogActivity.LogContent>
                            </baast:LogActivity>
                            <bda:DataTableAddRowActivity DataRow="{x:Null}" ActivityName="添加数据行" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="添加数据行" sap:VirtualizedContainerService.HintSize="349,22" sap2010:WorkflowViewState.IdRef="DataTableAddRowActivity_1">
                              <bda:DataTableAddRowActivity.ArrayRow>
                                <InArgument x:TypeArguments="s:Object[]">
                                  <mca:CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_36">new Object[]{item.ToString(),false}</mca:CSharpValue>
                                </InArgument>
                              </bda:DataTableAddRowActivity.ArrayRow>
                              <bda:DataTableAddRowActivity.DataTable>
                                <InArgument x:TypeArguments="sd:DataTable">
                                  <mca:CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_35">处理记录数据表</mca:CSharpValue>
                                </InArgument>
                              </bda:DataTableAddRowActivity.DataTable>
                            </bda:DataTableAddRowActivity>
                            <boa:OfficeExcelSetRangeActivity ActivityName="写入区域" AddHeaders="True" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="写入区域" sap:VirtualizedContainerService.HintSize="349,112" sap2010:WorkflowViewState.IdRef="OfficeExcelSetRangeActivity_1">
                              <boa:OfficeExcelSetRangeActivity.InputDataTable>
                                <InArgument x:TypeArguments="sd:DataTable">
                                  <mca:CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_38">处理记录数据表</mca:CSharpValue>
                                </InArgument>
                              </boa:OfficeExcelSetRangeActivity.InputDataTable>
                              <boa:OfficeExcelSetRangeActivity.SheetName>
                                <InArgument x:TypeArguments="x:String">
                                  <Literal x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="Literal`1_10">Sheet1</Literal>
                                </InArgument>
                              </boa:OfficeExcelSetRangeActivity.SheetName>
                              <boa:OfficeExcelSetRangeActivity.StartCell>
                                <InArgument x:TypeArguments="x:String">
                                  <Literal x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="Literal`1_9">A1</Literal>
                                </InArgument>
                              </boa:OfficeExcelSetRangeActivity.StartCell>
                            </boa:OfficeExcelSetRangeActivity>
                          </Sequence>
                        </bfa:If.Then>
                      </bfa:If>
                    </Sequence>
                  </ActivityAction>
                </bfa:ForEach>
              </Sequence>
            </Sequence>
          </ActivityAction>
        </boa:OfficeExcelOpenOrCreateActivity.Body>
        <boa:OfficeExcelOpenOrCreateActivity.ExcelFile>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_4">System.Convert.ToString(处理记录表路径)</mca:CSharpValue>
          </InArgument>
        </boa:OfficeExcelOpenOrCreateActivity.ExcelFile>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </boa:OfficeExcelOpenOrCreateActivity>
      <ecaad:InitializeDictionaryActivity ActivityName="初始化字典" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="初始化字典" sap:VirtualizedContainerService.HintSize="550,58" sap2010:WorkflowViewState.IdRef="InitializeDictionaryActivity_1">
        <ecaad:InitializeDictionaryActivity.Dictionary>
          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Boolean)">
            <mca:CSharpReference x:TypeArguments="scg:Dictionary(x:String, x:Boolean)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_6">处理记录字典</mca:CSharpReference>
          </OutArgument>
        </ecaad:InitializeDictionaryActivity.Dictionary>
      </ecaad:InitializeDictionaryActivity>
      <bda:ForEach CurrentIndex="{x:Null}" ActivityName="遍历行" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="遍历行" sap:VirtualizedContainerService.HintSize="550,797" sap2010:WorkflowViewState.IdRef="ForEach_1">
        <bda:ForEach.DataTable>
          <InArgument x:TypeArguments="sd:DataTable">
            <mca:CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_5">处理记录数据表</mca:CSharpValue>
          </InArgument>
        </bda:ForEach.DataTable>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ActivityAction x:TypeArguments="sd:DataRow">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
          </ActivityAction.Argument>
          <bfa:If ActivityName="条件（If）" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="条件（If）" sap:VirtualizedContainerService.HintSize="534,610" sap2010:WorkflowViewState.IdRef="If_2" IsIgnore="False">
            <bfa:If.Condition>
              <InArgument x:TypeArguments="x:Boolean">
                <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_8">row["是否处理完成"].ToString().ToLower()=="true"</mca:CSharpValue>
              </InArgument>
            </bfa:If.Condition>
            <bfa:If.Then>
              <ecaad:AddDictionaryActivity ActivityName="添加键值对" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="添加键值对" sap:VirtualizedContainerService.HintSize="349,117" sap2010:WorkflowViewState.IdRef="AddDictionaryActivity_1" KeyValuePairJsonText="[{&quot;Key&quot;:&quot;row[\&quot;模块名称\&quot;].ToString()&quot;,&quot;KeyTypeName&quot;:&quot;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&quot;,&quot;Value&quot;:&quot;true&quot;,&quot;ValueTypeName&quot;:&quot;System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&quot;}]">
                <ecaad:AddDictionaryActivity.Dictionary>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Boolean)">
                    <mca:CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:Boolean)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_20">处理记录字典</mca:CSharpValue>
                  </InArgument>
                </ecaad:AddDictionaryActivity.Dictionary>
                <ecaad:AddDictionaryActivity.KeyValuePairs>
                  <ecam:KeyValueModel Index="1" IsNotFirst="False">
                    <ecam:KeyValueModel.Key>
                      <InArgument x:TypeArguments="x:String">
                        <mca:CSharpValue x:TypeArguments="x:String">row["模块名称"].ToString()</mca:CSharpValue>
                      </InArgument>
                    </ecam:KeyValueModel.Key>
                    <ecam:KeyValueModel.Value>
                      <InArgument x:TypeArguments="x:Boolean">
                        <mca:CSharpValue x:TypeArguments="x:Boolean">true</mca:CSharpValue>
                      </InArgument>
                    </ecam:KeyValueModel.Value>
                  </ecam:KeyValueModel>
                </ecaad:AddDictionaryActivity.KeyValuePairs>
              </ecaad:AddDictionaryActivity>
            </bfa:If.Then>
            <bfa:If.Else>
              <ecaad:AddDictionaryActivity ActivityName="添加键值对" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="添加键值对" sap:VirtualizedContainerService.HintSize="349,117" sap2010:WorkflowViewState.IdRef="AddDictionaryActivity_2" KeyValuePairJsonText="[{&quot;Key&quot;:&quot;row[\&quot;模块名称\&quot;].ToString()&quot;,&quot;KeyTypeName&quot;:&quot;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&quot;,&quot;Value&quot;:&quot;false&quot;,&quot;ValueTypeName&quot;:&quot;System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&quot;}]">
                <ecaad:AddDictionaryActivity.Dictionary>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Boolean)">
                    <mca:CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:Boolean)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_21">处理记录字典</mca:CSharpValue>
                  </InArgument>
                </ecaad:AddDictionaryActivity.Dictionary>
                <ecaad:AddDictionaryActivity.KeyValuePairs>
                  <ecam:KeyValueModel Index="1" IsNotFirst="False">
                    <ecam:KeyValueModel.Key>
                      <InArgument x:TypeArguments="x:String">
                        <mca:CSharpValue x:TypeArguments="x:String">row["模块名称"].ToString()</mca:CSharpValue>
                      </InArgument>
                    </ecam:KeyValueModel.Key>
                    <ecam:KeyValueModel.Value>
                      <InArgument x:TypeArguments="x:Boolean">
                        <mca:CSharpValue x:TypeArguments="x:Boolean">false</mca:CSharpValue>
                      </InArgument>
                    </ecam:KeyValueModel.Value>
                  </ecam:KeyValueModel>
                </ecaad:AddDictionaryActivity.KeyValuePairs>
              </ecaad:AddDictionaryActivity>
            </bfa:If.Else>
          </bfa:If>
        </ActivityAction>
      </bda:ForEach>
      <ecaad:PrintDictionaryActivity ActivityName="打印字典" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="打印字典" sap:VirtualizedContainerService.HintSize="550,58" sap2010:WorkflowViewState.IdRef="PrintDictionaryActivity_1">
        <ecaad:PrintDictionaryActivity.Dictionary>
          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Boolean)">
            <mca:CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:Boolean)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_19">处理记录字典</mca:CSharpValue>
          </InArgument>
        </ecaad:PrintDictionaryActivity.Dictionary>
      </ecaad:PrintDictionaryActivity>
    </Sequence>
  </Sequence>
</Activity>